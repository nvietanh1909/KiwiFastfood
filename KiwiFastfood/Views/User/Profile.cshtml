@{
    ViewBag.Title = "Thông tin tài khoản";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .profile-container {
        background: #f8f9fa;
        padding: 40px 0;
        min-height: calc(100vh - 100px);
    }

    .profile-sidebar {
        background: white;
        border-radius: 15px;
        box-shadow: 0 2px 15px rgba(0,0,0,0.1);
        padding: 25px;
    }

    .user-info {
        text-align: center;
        padding-bottom: 25px;
        border-bottom: 1px solid #eee;
        margin-bottom: 25px;
    }

    .user-avatar {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        margin: 0 auto 15px;
        background: #e4002b;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 3rem;
    }

    .user-name {
        font-size: 1.5rem;
        font-weight: 600;
        color: #333;
        margin: 10px 0 5px;
    }

    .user-email {
        color: #666;
        font-size: 0.9rem;
    }

    .nav-menu {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .nav-item {
        margin-bottom: 10px;
    }

    .nav-link {
        display: flex;
        align-items: center;
        padding: 12px 15px;
        border-radius: 10px;
        color: #444;
        text-decoration: none;
        transition: all 0.3s ease;
    }

    .nav-link:hover, .nav-link.active {
        background: #fff5f6;
        color: #e4002b;
        transform: translateX(5px);
    }

    .nav-link i {
        width: 24px;
        margin-right: 10px;
        font-size: 1.2rem;
    }

    .content-area {
        background: white;
        border-radius: 15px;
        box-shadow: 0 2px 15px rgba(0,0,0,0.1);
        padding: 30px;
    }

    .content-header {
        margin-bottom: 30px;
    }

    .content-title {
        font-size: 1.8rem;
        font-weight: 600;
        color: #333;
        margin-bottom: 10px;
    }

    .content-subtitle {
        color: #666;
        font-size: 1rem;
    }

    .form-group {
        margin-bottom: 25px;
    }

    .form-label {
        font-weight: 600;
        color: #444;
        margin-bottom: 8px;
        display: block;
    }

    .form-control {
        border: 2px solid #eee;
        border-radius: 10px;
        padding: 12px 15px;
        font-size: 1rem;
        transition: all 0.3s ease;
    }

    .form-control:focus {
        border-color: #e4002b;
        box-shadow: 0 0 0 0.2rem rgba(228, 0, 43, 0.1);
    }

    .btn-save {
        background: #e4002b;
        color: white;
        border: none;
        padding: 12px 30px;
        border-radius: 10px;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .btn-save:hover {
        background: #c1001f;
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(228, 0, 43, 0.3);
    }

    .order-card {
        border: 1px solid #eee;
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 20px;
        transition: all 0.3s ease;
    }

    .order-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }

    .order-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
        padding-bottom: 15px;
        border-bottom: 1px solid #eee;
    }

    .order-id {
        font-weight: 600;
        color: #333;
    }

    .order-date {
        color: #666;
        font-size: 0.9rem;
    }

    .order-status {
        padding: 5px 15px;
        border-radius: 20px;
        font-size: 0.9rem;
        font-weight: 500;
    }

    .status-pending {
        background: #fff8e1;
        color: #ffa000;
    }

    .status-processing {
        background: #e3f2fd;
        color: #1976d2;
    }

    .status-completed {
        background: #e8f5e9;
        color: #388e3c;
    }

    .status-cancelled {
        background: #fbe9e7;
        color: #d32f2f;
    }

    .order-total {
        font-size: 1.1rem;
        font-weight: 600;
        color: #e4002b;
    }

    .tab-content {
        display: none;
    }

    .tab-content.active {
        display: block;
    }

    /* Thêm styles cho bảng đơn hàng */
    .orders-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0 12px;
        margin-top: -12px;
    }

    .orders-table tr {
        background: white;
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
        transition: all 0.3s ease;
    }

    .orders-table tr:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    }

    .orders-table td {
        padding: 16px;
        vertical-align: middle;
        border: none;
    }

    .orders-table td:first-child {
        border-top-left-radius: 10px;
        border-bottom-left-radius: 10px;
    }

    .orders-table td:last-child {
        border-top-right-radius: 10px;
        border-bottom-right-radius: 10px;
    }

    .order-date {
        color: #666;
        font-size: 0.9rem;
    }

    .order-items-count {
        font-weight: 500;
        color: #333;
    }

    .order-price {
        font-weight: 600;
        color: #e4002b;
        font-size: 1.1rem;
    }

    .badge {
        padding: 8px 12px;
        border-radius: 20px;
        font-weight: 500;
        font-size: 0.85rem;
    }

    .badge.bg-warning {
        background-color: #fff8e1 !important;
        color: #ffa000 !important;
        border: 1px solid #ffe082;
    }

    .badge.bg-info {
        background-color: #e3f2fd !important;
        color: #1976d2 !important;
        border: 1px solid #90caf9;
    }

    .badge.bg-primary {
        background-color: #e8eaf6 !important;
        color: #3f51b5 !important;
        border: 1px solid #9fa8da;
    }

    .badge.bg-success {
        background-color: #e8f5e9 !important;
        color: #388e3c !important;
        border: 1px solid #a5d6a7;
    }

    .badge.bg-danger {
        background-color: #fbe9e7 !important;
        color: #d32f2f !important;
        border: 1px solid #ffab91;
    }

    .btn-group-actions {
        display: flex;
        gap: 8px;
    }

    .btn-sm {
        padding: 8px 16px;
        font-size: 0.9rem;
        font-weight: 500;
        border-radius: 8px;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background: #e4002b;
        border: none;
    }

    .btn-primary:hover {
        background: #c1001f;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(228, 0, 43, 0.2);
    }

    .btn-danger {
        background: white;
        border: 1px solid #dc3545;
        color: #dc3545;
    }

    .btn-danger:hover {
        background: #dc3545;
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(220, 53, 69, 0.2);
    }

    .empty-orders {
        text-align: center;
        padding: 60px 20px;
        background: white;
        border-radius: 15px;
        box-shadow: 0 2px 15px rgba(0,0,0,0.1);
    }

    .empty-orders i {
        font-size: 4rem;
        color: #e4002b;
        margin-bottom: 20px;
    }

    .empty-orders h4 {
        color: #333;
        margin-bottom: 10px;
    }

    .empty-orders p {
        color: #666;
        margin-bottom: 25px;
    }
</style>

<div class="profile-container">
    <div class="container">
        <div class="row">
            <!-- Sidebar -->
            <div class="col-md-3">
                <div class="profile-sidebar">
                    <div class="user-info">
                        <div class="user-avatar">
                            <i class="fas fa-user"></i>
                        </div>
                        <h4 class="user-name">@(ViewBag.UserProfile?.hoTen ?? "Khách hàng")</h4>
                        <div class="user-email">@(ViewBag.UserProfile?.email ?? "Chưa cập nhật email")</div>
                    </div>

                    <ul class="nav-menu">
                        <li class="nav-item">
                            <a href="#profile" class="nav-link active" data-tab="profile">
                                <i class="fas fa-user"></i>
                                Thông tin cá nhân
                            </a>
                        </li>
                        <li class="nav-item">
                            <a href="#orders" class="nav-link" data-tab="orders">
                                <i class="fas fa-shopping-bag"></i>
                                Đơn hàng của tôi
                            </a>
                        </li>
                        <li class="nav-item">
                            <a href="#address" class="nav-link" data-tab="address">
                                <i class="fas fa-map-marker-alt"></i>
                                Sổ địa chỉ
                            </a>
                        </li>
                        <li class="nav-item">
                            <a href="#password" class="nav-link" data-tab="password">
                                <i class="fas fa-lock"></i>
                                Đổi mật khẩu
                            </a>
                        </li>
                        <li class="nav-item">
                            <a href="#notifications" class="nav-link" data-tab="notifications">
                                <i class="fas fa-bell"></i>
                                Thông báo
                            </a>
                        </li>
                    </ul>
                </div>
            </div>

            <!-- Content Area -->
            <div class="col-md-9">
                <div class="content-area">
                    <!-- Profile Tab -->
                    <div id="profile" class="tab-content active">
                        <div class="content-header">
                            <h2 class="content-title">Thông tin cá nhân</h2>
                            <p class="content-subtitle">Quản lý thông tin cá nhân của bạn</p>
                        </div>

                        <form id="profileForm">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Họ và tên</label>
                                        <input type="text" class="form-control" value="@(ViewBag.UserInfo?.hoTen ?? "")" placeholder="Nhập họ và tên">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Email</label>
                                        <input type="email" class="form-control" value="@(ViewBag.UserInfo?.email ?? "")" placeholder="Nhập email" readonly>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Số điện thoại</label>
                                        <input type="tel" class="form-control" value="@(ViewBag.UserInfo?.soDienThoai ?? "")" placeholder="Nhập số điện thoại">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Ngày sinh</label>
                                        <input type="date" class="form-control" value="@(ViewBag.UserInfo?.ngaySinh?.ToString("yyyy-MM-dd") ?? "")" placeholder="Chọn ngày sinh">
                                    </div>
                                </div>
                            </div>

                            <button type="submit" class="btn btn-save">Lưu thay đổi</button>
                        </form>
                    </div>

                    <!-- Orders Tab -->
                    <div id="orders" class="tab-content">
                        <div class="content-header">
                            <h2 class="content-title">Đơn hàng của tôi</h2>
                            <p class="content-subtitle">Xem và theo dõi trạng thái đơn hàng của bạn</p>
                        </div>

                        @if (ViewBag.Orders != null && ViewBag.Orders.Count > 0)
                        {
                            <div class="table-responsive">
                                <table class="orders-table">
                                    <thead>
                                        <tr>
                                            <th>Ngày đặt</th>
                                            <th>Số món</th>
                                            <th>Tổng tiền</th>
                                            <th>Giao hàng</th>
                                            <th>Thanh toán</th>
                                            <th>Thao tác</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var order in ViewBag.Orders)
                                        {
                                            <tr class="order-row">
                                                <td>
                                                    <div class="order-date">
                                                        <i class="far fa-calendar-alt"></i>
                                                        <span>@(order.createdAt != null ? DateTime.Parse(order.createdAt.ToString()).ToString("dd/MM/yyyy HH:mm") : "N/A")</span>
                                                    </div>
                                                </td>
                                                <td>
                                                    <span class="order-items-count">
                                                        <i class="fas fa-shopping-basket"></i>
                                                        <span>@(order.items != null ? order.items.Count : 0)</span>
                                                    </span>
                                                </td>
                                                <td>
                                                    <span class="order-price">@String.Format("{0:N0}", order.totalPrice)</span>
                                                </td>
                                                <td>
                                                    @{
                                                        string statusClass = "badge status-secondary";
                                                        string statusText = "Không xác định";

                                                        if (order.status != null)
                                                        {
                                                            switch (order.status.ToString().ToLower())
                                                            {
                                                                case "pending":
                                                                    statusClass = "badge status-warning";
                                                                    statusText = "Đang xử lý";
                                                                    break;
                                                                case "processing":
                                                                    statusClass = "badge status-info";
                                                                    statusText = "Đang chuẩn bị";
                                                                    break;
                                                                case "shipped":
                                                                    statusClass = "badge status-primary";
                                                                    statusText = "Đang giao hàng";
                                                                    break;
                                                                case "delivered":
                                                                    statusClass = "badge status-success";
                                                                    statusText = "Đã giao hàng";
                                                                    break;
                                                                case "cancelled":
                                                                    statusClass = "badge status-danger";
                                                                    statusText = "Đã hủy";
                                                                    break;
                                                            }
                                                        }
                                                    }
                                                    <span class="@statusClass">@statusText</span>
                                                </td>
                                                <td>
                                                    @{
                                                        string paymentStatusClass = "badge status-secondary";
                                                        string paymentStatusText = "Không xác định";

                                                        if (order.paymentStatus != null)
                                                        {
                                                            switch (order.paymentStatus.ToString().ToLower())
                                                            {
                                                                case "pending":
                                                                    paymentStatusClass = "badge status-warning";
                                                                    paymentStatusText = "Chưa thanh toán";
                                                                    break;
                                                                case "paid":
                                                                    paymentStatusClass = "badge status-success";
                                                                    paymentStatusText = "Đã thanh toán";
                                                                    break;
                                                                case "refunded":
                                                                    paymentStatusClass = "badge status-info";
                                                                    paymentStatusText = "Đã hoàn tiền";
                                                                    break;
                                                            }
                                                        }
                                                    }
                                                    <span class="@paymentStatusClass">@paymentStatusText</span>
                                                </td>
                                                <td>
                                                    <div class="btn-group-actions">
                                                        <a href="@Url.Action("Detail", "Order", new { id = order._id })"
                                                           class="btn btn-view">
                                                            <i class="fas fa-eye"></i> 
                                                        </a>

                                                        @if (order.status != null &&
                                                             (order.status.ToString().ToLower() == "pending" ||
                                                              order.status.ToString().ToLower() == "processing") &&
                                                             (order.paymentStatus == null ||
                                                              order.paymentStatus.ToString().ToLower() == "pending"))
                                                        {
                                                            using (Html.BeginForm("Cancel", "Order", FormMethod.Post,
                                                                   new { @class = "d-inline" }))
                                                            {
                                                                <input type="hidden" name="id" value="@order._id" />
                                                                <button type="submit" class="btn btn-cancel"
                                                                        onclick="return confirm('Bạn có chắc chắn muốn hủy đơn hàng này?');">
                                                                    <i class="fas fa-times"></i> 
                                                                </button>
                                                            }
                                                        }
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="empty-state">
                                <i class="fas fa-shopping-bag empty-icon"></i>
                                <h4>Chưa có đơn hàng nào</h4>
                                <p>Khám phá thực đơn và đặt món ăn yêu thích ngay hôm nay!</p>
                                <a href="@Url.Action("Product", "Product")" class="btn btn-primary">
                                    <i class="fas fa-utensils"></i> Đặt hàng ngay
                                </a>
                            </div>
                        }
                    </div>

                    <style>
                        .tab-content {
                            padding: 20px;
                            background: #fff;
                            border-radius: 8px;
                        }

                        .content-header {
                            margin-bottom: 24px;
                        }

                        .content-title {
                            font-size: 24px;
                            color: #1a1a1a;
                            margin-bottom: 8px;
                        }

                        .content-subtitle {
                            font-size: 14px;
                            color: #666;
                        }

                        .orders-table {
                            width: 100%;
                            border-collapse: separate;
                            border-spacing: 0;
                        }

                            .orders-table th {
                                font-weight: 600;
                                color: #333;
                                padding: 12px 16px;
                                text-align: left;
                                background: #f8f9fa;
                            }

                        .order-row {
                            border-bottom: 1px solid #eee;
                            transition: background 0.2s;
                        }

                            .order-row:hover {
                                background: #f8f9fa;
                            }

                            .order-row td {
                                padding: 16px;
                                vertical-align: middle;
                            }

                        .order-date, .order-items-count {
                            display: flex;
                            align-items: center;
                            gap: 8px;
                        }

                        .order-price {
                            font-weight: 600;
                            color: #2c3e50;
                        }

                        .badge {
                            padding: 6px 12px;
                            border-radius: 12px;
                            font-size: 13px;
                            font-weight: 500;
                        }

                        .status-success {
                            background: #e6ffe6;
                            color: #27ae60;
                        }

                        .status-warning {
                            background: #fff3e6;
                            color: #e67e22;
                        }

                        .status-danger {
                            background: #ffe6e6;
                            color: #c0392b;
                        }

                        .status-info {
                            background: #e6f3ff;
                            color: #2980b9;
                        }

                        .status-primary {
                            background: #e6ecff;
                            color: #2c3e50;
                        }

                        .status-secondary {
                            background: #f0f0f0;
                            color: #666;
                        }

                        .btn {
                            padding: 8px 16px;
                            border-radius: 4px;
                            text-decoration: none;
                            font-size: 13px;
                            transition: all 0.2s;
                        }

                        .btn-view {
                            background: #3498db;
                            color: white;
                        }

                        .btn-cancel {
                            background: #e74c3c;
                            color: white;
                            border: none;
                        }

                        .btn-group-actions {
                            display: flex;
                            gap: 8px;
                        }

                        .empty-state {
                            text-align: center;
                            padding: 40px;
                            color: #666;
                        }

                        .empty-icon {
                            font-size: 48px;
                            color: #ddd;
                            margin-bottom: 20px;
                        }

                        .btn-primary {
                            background: #2ecc71;
                            color: white;
                            padding: 10px 20px;
                        }

                        .btn:hover {
                            opacity: 0.9;
                        }
                    </style>

                    <!-- Other tabs will be implemented similarly -->
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Tab switching functionality
        document.querySelectorAll('.nav-link').forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                
                // Remove active class from all links and tabs
                document.querySelectorAll('.nav-link').forEach(l => l.classList.remove('active'));
                document.querySelectorAll('.tab-content').forEach(t => t.classList.remove('active'));
                
                // Add active class to clicked link and corresponding tab
                this.classList.add('active');
                document.getElementById(this.getAttribute('data-tab')).classList.add('active');
            });
        });

        // Form submission
        document.getElementById('profileForm').addEventListener('submit', function(e) {
            e.preventDefault();
            // Add your form submission logic here
            alert('Thông tin đã được cập nhật!');
        });
    </script>
}

@functions {
    string GetStatusClass(string status)
    {
        switch (status?.ToLower())
        {
            case "pending": return "status-pending";
            case "processing": return "status-processing";
            case "completed": return "status-completed";
            case "cancelled": return "status-cancelled";
            default: return "status-pending";
        }
    }

    string GetStatusText(string status)
    {
        switch (status?.ToLower())
        {
            case "pending": return "Chờ xác nhận";
            case "processing": return "Đang xử lý";
            case "completed": return "Đã hoàn thành";
            case "cancelled": return "Đã hủy";
            default: return "Chờ xác nhận";
        }
    }
}
